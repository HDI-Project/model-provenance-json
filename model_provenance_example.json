{
   "metadata": "/path/to/metadata.json",

    "prediction_engineering": {
        "labeling_function": "/path/to/labeling_function.py",
        "prediction_window": "56 days",
        "min_training_data": "28 days",
        "lead": "28 days"
    },


    "feature_engineering":[
      {
        "method": "Deep Feature Synthesis",
        "training_window": "2 years",
        "aggregate_primitives": ["TREND", "MEAN", "STD"],
        "transform_primitives": ["WEEKEND", "PERCENTILE"],
        "ignore_variables":{
            "customers": ["age", "zipcode"],
            "products": ["brand"]
        },
        "feature_selection": {
            "method": "Random Forest",
            "n_features": 20
        }
      }
    ],


    "modeling": {
        "methods": [{"method": "RandomForestClassifer",
                     "hyperparameter_options": "/path/to/random_forest.json"},
                    {"method": "MLPClassifer",
                     "hyperparameter_options": "/path/to/multi_layer_perceptron.json"}],
        "budget": "2 hours",
        "automl_method": "/path/to/automl_specs.json",
        "cost_function": "/path/to/cost_function.py"
    },

    "data_splits": [
        {
            "id": "train",
            "start_time": "2014/01/01",
            "end_time": "2014/06/01",
            "label_search_parameters": {
                "strategy": "random",
                "examples_per_instance": 10,
                "offset": "7 days",
                "gap": "14 days"
            }
        },
        {
            "id": "threshold-tuning",
            "start_time": "2014/06/02",
            "end_time": "2015/01/01",
            "label_search_parameters": {"offset": "7 days"}
        },
        {
            "id": "test",
            "start_time": "2015/01/02",
            "end_time": "2015/06/01",
            "label_search_parameters": {"offset": "7 days"}
        }
    ],

    "training_setup": {
        "training": {"data_split_id": "train",
                     "validation_method": "/path/to/validation_spec_train.json"},
        "tuning": {"data_split_id": "threshold-tuning",
                   "validation_method": "/path/to/validation_spec_tune.json"},
        "testing": {"data_split_id": "test",
                    "validation_method": "/path/to/validation_spec_test.json"}
    },

    "results": {
      "test": [
          {
              "random_seed": 0,
              "threshold": 0.210,
              "precision": 0.671,
              "recall": 0.918,
              "fpr": 0.102,
              "auc": 0.890
          },
          {
              "random_seed": 1,
              "threshold": 0.214,
              "precision": 0.702,
              "recall": 0.904,
              "fpr": 0.113,
              "auc": 0.892
          }
      ]
    },

    "deployment": {
        "deployment_executable": "/path/to/executable",
        "deployment_parameters": {
            "feature_list_path": "/path/to/serialized_feature_list.p",
            "model_path": "/path/to/serialized_fitted_model.p",
            "threshold": 0.212
        },
        "integration_and_validation": {
            "data_fields_used": {
                    "customers": ["name"],
                    "orders": ["Order Id", "Timestamp"],
                    "products": ["Product ID", "Category"],
                    "orders_products": ["Product Id", "Order Id", "Price", "Discount"]
            },
            "expected_feature_value_ranges":{
                "MEAN(orders_products.Price)": {"min": 9.50, "max": 332.30},
                "PERCENT(WEEKEND(orders.Timestamp))": {"min": 0, "max": 1.0}
            }
        }
}
